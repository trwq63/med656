@using UAHFitVault.Database.Entities;
@using UAHFitVault.LogicLayer.Enums;

@{ 
    //Get medical devices from session set in controller.
    List<MedicalDevice> medicalDevices = (Session["sMedicalDevices"] != null) ? (List<MedicalDevice>)Session["sMedicalDevices"] : null;

    List<string> activityTypes = new List<string>() {
        "Select Activity Type"
    };
    activityTypes.AddRange(Enum.GetNames(typeof(ActivityType)).Cast<string>().Select(z => z.Replace("_", " ")).ToList());
}

@section headers{    

}

<h2 style="text-align:center">Select Data to Upload</h2>

<div class="col s12 center-align">
    <form id="dataform" action="@Url.Action("ProcessData", "Patient")" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        <div>
            <label class="black-text center-align">To upload data, use the browse button and select a file or list of files to process for upload.</label>
            <div class="file-field input-field">
                <div class="btn">
                    <input name="Files" type="file" multiple>
                    <span>Browse</span>
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate" type="text" placeholder="Upload one or more files">
                </div>
            </div>
            <label class="black-text center-align">Provide a date range for when the data was collected.</label>
            <div class="row">
                <div class="col s12 offset-s3">
                    <div class="input-field col m3 s6 offset-s2">    
                        <i class="material-icons prefix">today</i>
                        <input id="FromDate" name="FromDate" type="text" class="datepicker">
                        <label for="FromDate">From Date</label>                        
                    </div>
                    <div class="input-field col m3 s6">
                        <i class="material-icons prefix">today</i>
                        <input id="ToDate" name="ToDate" type="text" class="datepicker">
                        <label for="ToDate">To Date</label>
                    </div>
                </div>
            </div>
            <label class="black-text center-align">Select the device for the data.</label>
            <div class="row">
                @if (medicalDevices != null && medicalDevices.Count > 0) {
                    foreach (MedicalDevice device in medicalDevices) {
                        int index = medicalDevices.IndexOf(device);
                        string id = "device" + index;
                        <input name="MedicalDeviceType" type="radio" id="@id" value="@device.Name" />
                        <label for="@id">@device.Name</label>
                    }
                }
            </div>
        </div>
        <div class="divider grey section-divider"></div>
        <div>
            <label class="black-text">Add Activities</label>
            <table class="responsive-table centered">
                @*<thead>
                    <tr>
                        <th data-field="activityType"><label>Select Activity Type</label></th>
                        <th data-field="startTime"><label>Activity Start Time</label></th>
                        <th data-field="endTime"><label>Activity End Time</label></th>
                    </tr>
                </thead>*@
                <tbody>
                    <tr>
                        <td>
                            <div class="input-field col s4">
                                <select id="ActivityType">
                                    @foreach (string activityType in activityTypes) {
                                        if (activityType == activityTypes.First()) {
                                            <option value="" disabled selected>@activityType</option>
                                        }
                                        else {
                                            <option value="@activityType">@activityType</option>
                                        }
                                    }
                                </select>
                                <label for="ActivityType">Activity Type</label>
                            </div>                        
                        </td>
                        <td>
                            <div class="input-field col m3 s6 offset-s2">
                                <input id="StartTime" name="StartTime" type="text" class="timepicker">
                                <label for="StartTime">Start Time</label>
                            </div>
                        </td>
                        <td>
                            <div class="input-field col m3 s6 offset-s2">
                                <input id="EndTime" name="EndTime" type="text" class="timepicker">
                                <label for="EndTime">End Time</label>
                            </div>                       
                        </td>
                        <td>
                            <button class="btn-floating waves-effect waves-light green btn-add" type="button">
                                <i class="material-icons prefix">add</i>
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="divider grey section-divider"></div>
        <div class="col s12 center-align">
            <button id="btnSubmit" class="btn waves-effect waves-light button-section" type="submit" name="submit">
                Submit
                <i class="material-icons right">send</i>
            </button>
            @*<button id="btnClear" class="btn waves-effect waves-light button-section" type="button" name="action">
                Clear
            </button>*@
        </div>
    </form>

</div>


@section scripts{
<script src="~/Scripts/pickadate/picker.js"></script>
<script src="~/Scripts/pickadate/picker.date.js"></script>
<script src="~/Scripts/pickadate/picker.time.js"></script>
<script>
        $(document).ready(function () {
            $('.datepicker').pickadate({
                selectMonths: true, // Creates a dropdown to control month
                selectYears: 100,
                max: Date.now()
            });
            setTimePicker();
        });
        $(document).on('click', '.btn-add', function (e) {
            e.preventDefault();

            var controlForm = $(this).closest('table'),
                currentEntry = $(this).parents('tr:first'),
                newEntry = $(currentEntry.clone()).appendTo(controlForm);

            newEntry.find('input').val('');
            controlForm.find('tr:not(:last) .btn-add')
                .removeClass('btn-add').addClass('btn-remove')
                .removeClass('green').addClass('red')
                .html('<i class="material-icons prefix">delete</i>');
            setTimePicker();
        }).on('click', '.btn-remove', function (e) {
            $(this).parents('tr:first').remove();

            e.preventDefault();
            return false;
        });

        function setTimePicker() {
            $('.timepicker').pickatime({
                clear: 'Clear',
                format: 'h:i A',
                interval: 15,
                closeOnSelect: true,
                closeOnClear: true
            });
        };
</script>
} 